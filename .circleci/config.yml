version: 2.1

jobs:
  checkout:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  build:
    machine:
      image: ubuntu-2004:202101-01
    environment:
      BUILDKIT_PROGRESS: "plain"
      DOCKER_UID: "1001" # The circleci user has uid 1001, not 1000
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Create hash key for docker image
          command: find Dockerfile docker-compose.yml docker/ -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/docker-image.hash
      - restore_cache:
          name: Restore docker image cache
          key: docker-image-{{ checksum "~/docker-image.hash" }}
      - run:
          name: Load docker image cache
          command: ls docker-image.tar && docker load -i docker-image.tar || true
      - run:
          name: Build docker images, install dependencies & warmup cache
          command: make build
      - run:
          name: Create docker image cache
          command: ls docker-image.tar || docker save -o docker-image.tar project_app:latest
      - save_cache:
          name: Save docker image cache
          key: docker-image-{{ checksum "~/docker-image.hash" }}
          paths:
            - docker-image.tar
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  tests:
    machine:
      image: ubuntu-2004:202101-01
    environment:
      DOCKER_UID: "1001" # The circleci user has uid 1001, not 1000
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Load docker image cache
          command: docker load -i docker-image.tar
      - run:
          name: Start containers
          command: make up
      - run:
          name: Run tests
          command: make tests
      - store_test_results:
          path: var/tests

  pull_request_success:
    docker:
      - image: alpine/git
    steps:
      - run:
          name: Success
          command: echo "The workflow was successful!"

workflows:
  pull_request:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - checkout
      - build:
          requires:
            - checkout
      - tests:
          requires:
            - build
      - pull_request_success:
          requires:
            - tests
